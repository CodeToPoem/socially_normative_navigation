<launch>
  <!-- VISUALIZATION -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find normative_navigation)/config/rviz/lobby.rviz"/>

  <!-- PARAMETERS -->
  <!-- simulator parameters -->
  <param name="/pedsim/scene_file" value="$(find normative_navigation)scenes/lobby.xml" type="string"/>
  <param name="/pedsim_simulator/max_robot_speed" value="2.0" type="double"/>
  <param name="/pedsim_simulator/robot_wait_time" value="30000" type="double"/>
  <param name="/pedsim_simulator/agents_alpha" value="0.5" type="double"/>
  <param name="/pedsim_simulator/show_robot" value="true"/>
  <param name="/pedsim_simulator/teleop_flag" value="0" type="double"/>
  <param name="/use_sim_time" value="false"/>

  <!-- Behavior parameters -->
  <rosparam command="load" file="$(find social_compliance_layer)/cfg/behavior_parameters.yaml" />

  <!-- NODES -->

  <!-- Robot control group -->
  <arg name="publish_default_laser_collision_status" default="true"/>
  <group ns="/spencer/control">
    <include file="$(find spencer_description)/launch/publish.launch"/>
    <include file="$(find spencer_description)/launch/joints.launch"/>

    <include file="$(find spencer_control)/launch/driving_controller.launch" ns="/spencer/control" clear_params="true">
      <arg name="simulated" value="true"/>
      <arg name="rear_rgbd_coll_check" value="false"/>
      <arg name="front_rgbd_coll_check" value="false"/>
    </include>

    <group ns="driving_controller">
      <param name="pose_initial_x" value="6.0"/>
      <param name="pose_initial_y" value="2.0"/>
      <param name="pose_initial_theta" value="0.7"/>
      <param name="max_linear_velocity" value="1.6"/>
      <param name="max_angular_velocity" value="1.0"/>
    </group>

    <!-- Collision status for front and rear laser -->
    <group if="$(arg publish_default_laser_collision_status)">
      <node pkg="rostopic" type="rostopic" name="rostopic_laser_front" args="pub /spencer/control/collision/laser_front spencer_control_msgs/CollisionStatus '{collisionError: false, collisionWarning: false}' -r 35" />
      <node pkg="rostopic" type="rostopic" name="rostopic_laser_rear" args="pub /spencer/control/collision/laser_rear spencer_control_msgs/CollisionStatus '{collisionError: false, collisionWarning: false}' -r 35" />
    </group>
  </group>


  <!-- simulator node -->
  <node name="pedsim_simulator" pkg="pedsim_simulator" type="simulator" output="screen"/>

  <!-- Publishing Agents Tracks and Groups -->
  <node name="mock_tracks_lobby" pkg="normative_navigation" type="mock_tracks_static_lobby.py" respawn="false" output="screen" cwd="node"/>
  <node name="mock_groups_lobby" pkg="normative_navigation" type="mock_groups_lobby.py" respawn="false" output="screen" cwd="node"/>



  <!-- run move base -->
  <node pkg="move_base" type="move_base" name="move_base_node" output="screen">
    <remap from="/cmd_vel" to="/spencer/control/desired_velocity"/>
    <rosparam file="$(find normative_navigation)/config/move_base_parameters/common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find normative_navigation)/config/move_base_parameters/common.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find normative_navigation)/config/move_base_parameters/global_lobby.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find normative_navigation)/config/move_base_parameters/local_lobby.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find normative_navigation)/config/move_base_parameters/planner.yaml" command="load" />

    <param name="base_global_planner" value="navfn/NavfnROS"/>
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
    <!-- <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/> -->
  </node>


  <!-- Pedsim point clouds publisher -->
  <node name="pedsim_point_clouds" pkg="pedsim_point_clouds" type="pedsim_point_clouds" output="screen"/>

</launch>
